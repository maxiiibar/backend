paths:
  /carts:
    get:
      tags:
        - Carts
      summary: Obtener todos los carritos.
      responses:
        200:
          description: Lista de carritos obtenida con éxito.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/OkCartsResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/UnauthorizedCartResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/InternalServerErrorCartResponse"
    post:
      tags:
        - Carts
      summary: Crear un carrito nuevo.
      responses:
        200:
          description: Carrito creado exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/OkCartEmptyResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/BadRequestCartResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/UnauthorizedCartResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/InternalServerErrorCartResponse"
  /carts/{id}:
    get:
      tags:
        - Carts
      summary: Obtener un carrito por ID u "own para obtener el propio".
      parameters:
        - in: path
          name: id u "own"
          required: true
          description: ID del carrito u "own".
          schema:
            type: string
            example: 60d21b5267d0d8992e610c88
      responses:
        200:
          description: Carrito encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/OkCartResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/BadRequestCartResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/UnauthorizedCartResponse"
        404:
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/NotFoundCartResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/InternalServerErrorCartResponse"
    put:
      tags:
        - Carts
      summary: Actualizar un carrito por ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del carrito.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/Carts"
        required: true
      responses:
        200:
          description: Carrito actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/OkCartResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/BadRequestCartResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/UnauthorizedCartResponse"
        404:
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/NotFoundCartResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/InternalServerErrorCartResponse"
    delete:
      tags:
        - Carts
      summary: Eliminar un carrito por ID.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del carrito.
          schema:
            type: string
      responses:
        200:
          description: Carrito eliminado exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/OkCartResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/BadRequestCartResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/UnauthorizedCartResponse"
        404:
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/NotFoundCartResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/InternalServerErrorCartResponse"
  /carts/product/{idProd}:
    post:
      tags:
        - Carts
      summary: Agregar un producto al carrito.
      parameters:
        - in: path
          name: idProd
          required: true
          description: ID del producto.
          schema:
            type: string
      responses:
        200:
          description: Producto agregado al carrito con éxito.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/OkCartResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/BadRequestCartResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/UnauthorizedCartResponse"
        404:
          description: Producto o carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/NotFoundCartResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/InternalServerErrorCartResponse"
    delete:
      tags:
        - Carts
      summary: Eliminar un producto del carrito.
      parameters:
        - in: path
          name: idProd
          required: true
          description: ID del producto.
          schema:
            type: string
      responses:
        200:
          description: Producto eliminado del carrito con éxito.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/OkCartResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/BadRequestCartResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/UnauthorizedCartResponse"
        404:
          description: Producto o carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/NotFoundCartResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/InternalServerErrorCartResponse"
    put:
      tags:
        - Carts
      summary: Actualizar la cantidad de un producto en el carrito.
      parameters:
        - in: path
          name: idProd
          required: true
          description: ID del producto.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                  example: 3
        required: true
      responses:
        200:
          description: Cantidad del producto actualizada con éxito.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/OkCartResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/BadRequestCartResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/UnauthorizedCartResponse"
        404:
          description: Carrito o producto no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/NotFoundCartResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/InternalServerErrorCartResponse"
  /carts/:idCart/product/{idProd}:
    post:
      tags:
        - Carts
      summary: Agregar un producto al carrito por params.
      parameters:
        - in: path
          name: idCart
          required: true
          description: ID del carrito.
          schema:
            type: string
        - in: path
          name: idProd
          required: true
          description: ID del producto.
          schema:
            type: string
      responses:
        200:
          description: Producto agregado al carrito con éxito.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/OkCartResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/BadRequestCartResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/UnauthorizedCartResponse"
        404:
          description: Producto o carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/NotFoundCartResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/InternalServerErrorCartResponse"
  /carts/clear/mycart:
    delete:
      tags:
        - Carts
      summary: Limpiar el carrito propio.
      responses:
        200:
          description: Carrito limpiado exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/OkCartResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/BadRequestCartResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/UnauthorizedCartResponse"
        404:
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/NotFoundCartResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/InternalServerErrorCartResponse"
  /carts/clear/{idCart}:
    delete:
      tags:
        - Carts
      summary: Limpiar un carrito por params.
      parameters:
        - in: path
          name: idCart
          required: true
          description: ID del carrito.
          schema:
            type: string
      responses:
        200:
          description: Carrito limpiado exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/OkCartResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/BadRequestCartResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/UnauthorizedCartResponse"
        404:
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/NotFoundCartResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Carts/InternalServerErrorCartResponse"
  /products:
    get:
      tags:
        - Products
      summary: Obtener todos los productos.
      responses:
        200:
          description: Lista de productos obtenida con éxito.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/OkProductsResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/BadRequestProductResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/UnauthorizedProductResponse"
        404:
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/NotFoundProductResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/InternalServerErrorProductResponse"
    post:
      tags:
        - Products
      summary: Crear un producto nuevo.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/Products"
      responses:
        200:
          description: Producto creado correctamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/OkProductResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/BadRequestProductResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/UnauthorizedProductResponse"
        404:
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/NotFoundProductResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/InternalServerErrorProductResponse"
    delete:
      tags:
        - Products
      summary: Eliminar todos los productos.
      responses:
        200:
          description: Productos eliminados correctamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/OkAllProductsDeletedResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/BadRequestProductResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/UnauthorizedProductResponse"
        404:
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/NotFoundProductResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/InternalServerErrorProductResponse"
  /products/{id}:
    get:
      tags:
        - Products
      summary: Obtener producto por id.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto.
          schema:
            type: string
            example: 66f5685d92007b2a1e85c0b3
      responses:
        200:
          description: Producto obtenido exitosamente por id.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/OkProductResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/BadRequestProductResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/UnauthorizedProductResponse"
        404:
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/NotFoundProductResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/InternalServerErrorProductResponse"
    put: 
      tags:
        - Products
      summary: Actualizar producto.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto.
          schema:
            type: string
            example: 66f5685d92007b2a1e85c0b3
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/Products"
      responses:
        200:
          description: Producto actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/OkProductResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/BadRequestProductResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/UnauthorizedProductResponse"
        404:
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/NotFoundProductResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/InternalServerErrorProductResponse"
    delete:
      tags:
        - Products
      summary: Eliminar un producto.
      parameters:
        - in: path
          name: id
          required: true
          description: ID del producto.
          schema:
            type: string
            example: 66f5685d92007b2a1e85c0b3
      responses:
        200:
          description: Producto eliminado exitosamente.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/OkProductResponse"
        400:
          description: Error en la solicitud.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/BadRequestProductResponse"
        401:
          description: Persona no autorizada para acceder a este recurso.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/UnauthorizedProductResponse"
        404:
          description: Carrito no encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/NotFoundProductResponse"
        500:
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Products/InternalServerErrorProductResponse"
  /users/register:
    post:
      tags:
        - Users
      summary: Registrarse.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/User"
        required: true
      responses:
        200:
          description: Registro realizado con éxito.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Users/OkRegisterResponse"
  /users/login:
    post:
      tags:
        - Login
      summary: Login de usuario.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/parameters/schemas/Login"
        required: true
      responses:
        200:
          description: Loggeo realizado con éxito.
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Login/OkLoginResponse"
  /users/logout:
    post:
      tags:
        - Logout
      summary: "Log out del usuario"
      description: "Cierra la sesión del usuario eliminando la cookie de autenticación."
      responses:
        200:
          description: "Deslogeado con éxito."
          content:
            application/json:
              schema:
                $ref: "#/components/schema/Logout/OkLogoutResponse"